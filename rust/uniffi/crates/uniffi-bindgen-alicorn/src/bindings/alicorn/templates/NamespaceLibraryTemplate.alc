# Define some host FFI types that we use in the library

# def _uniffi_check_contract_api_version(lib):
#     # Get the bindings contract version from our ComponentInterface
#     bindings_contract_version = {{ ci.uniffi_contract_version() }}
#     # Get the scaffolding contract version by calling the into the dylib
#     scaffolding_contract_version = lib.{{ ci.ffi_uniffi_contract_version().name() }}()
#     if bindings_contract_version != scaffolding_contract_version:
#         raise InternalError("UniFFI contract version mismatch: try cleaning and rebuilding your project")
# 
# def _uniffi_check_api_checksums(lib):
#     {%- for (name, expected_checksum) in ci.iter_checksums() %}
#     if lib.{{ name }}() != {{ expected_checksum }}:
#         raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
#     {%- else %}
#     pass
#     {%- endfor %}

