[package]
name = "uniffi-macros-alicorn"
version = "0.1.0"
description = "An Alicorn bindings generator for Rust (convenience macros)"
homepage.workspace = true
repository.workspace = true
license = "MPL-2.0"
authors = [
    "Dusk Banks <me@bb010g.com>",
]
edition.workspace = true
rust-version.workspace = true
keywords = ["ffi", "bindgen", "alicorn"]

[lib]
proc-macro = true

[dependencies]
camino = "1.0.8"
fs-err = "2.7.0"
once_cell = "1.10.0"
proc-macro2 = "1.0"
quote = "1.0"
serde = { version = "1.0.136", features = ["derive"] }
syn = { version = "2.0", features = ["full", "visit-mut"] }
toml = "0.5.9"
# uniffi_alicorn_build = { workspace = true, optional = true }
uniffi_build = { workspace = true, optional = true }
uniffi_meta = { workspace = true }

[features]
default = []
# Enable the generate_and_include_scaffolding! macro
trybuild = [
    # "dep:uniffi_alicorn_build",
    "dep:uniffi_build",
]
# Generate extra scaffolding functions that use FfiBuffer to pass arguments and return values
scaffolding-ffi-buffer-fns = []
# Enable extra features that require a nightly compiler:
# * Add the full module path of exported items to FFI metadata instead of just the crate name.
#   This may be used by language backends to generate nested module structures in the future.
nightly = []

[lints.rust]
unexpected_cfgs.level = "warn"
unexpected_cfgs.check-cfg = [
    'cfg(rust_analyzer)',
]
